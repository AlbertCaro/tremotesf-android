name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: fedora:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install host dependencies
        run: |
          dnf -y --setopt=install_weak_deps=False install git gcc gcc-c++ make patch cmake ninja-build ccache 'pkgconfig(zlib)' 'cmake(double-conversion)' 'pkgconfig(libb2)' 'pkgconfig(libpcre2-posix)' 'cmake(Qt6HostInfo)' 'cmake(Qt6CoreTools)' 'cmake(Qt6WidgetsTools)' java-11-openjdk-devel unzip curl tar gzip which perl perl-FindBin perl-File-Basename

      - name: Check out
        uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0

      - name: Restore Android SDK from cache
        id: android-sdk-cache
        uses: actions/cache@v2
        with:
          path: android-sdk
          key: android-sdk-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts', 'gradle-plugin/**/*.kt') }}
          restore-keys: android-sdk-${{ runner.os }}-

      - name: Set up Android SDK
        run: |
          echo 'ANDROID_SDK_ROOT=${{github.workspace}}/android-sdk' >> "$GITHUB_ENV"
          if [[ -e android-sdk ]]; then
            echo 'Restored Android SDK from cache'
            exit
          fi
          curl -o cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip
          unzip cmdline-tools.zip
          rm cmdline-tools.zip
          mkdir -p android-sdk/cmdline-tools
          mv cmdline-tools android-sdk/cmdline-tools/latest
          yes | ./android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Restore ccache directory from cache
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ccache-${{ runner.os }}-${{ github.sha }}
          restore-keys: ccache-${{ runner.os }}-

      - name: Add GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@master

      - name: Build the app
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --info -P org.equeim.tremotesf.ccache=true build
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 3
          CCACHE_MAXSIZE: 1G

      - name: Archive debug APKs
        uses: actions/upload-artifact@v2
        with:
          name: debug-apks
          path: app/build/outputs/apk/*/debug/*.apk

      - name: Archive test and lint reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: |
            app/build/reports/*
            billing/build/reports/*
            common/build/reports/*
            libtremotesf/build/reports/*
            rpc/build/reports/*
            torrentfile/build/reports/*
