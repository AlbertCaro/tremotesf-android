// Targeted by JavaCPP version 1.5: DO NOT EDIT THIS FILE

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

public class LibTremotesf extends NativeLibraryConfig {
    static { Loader.load(); }

// Parsed from tracker.h

/*
 * Tremotesf
 * Copyright (C) 2015-2018 Alexey Rochev <equeim@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// #ifndef LIBTREMOTESF_TRACKER_H
// #define LIBTREMOTESF_TRACKER_H

// #include <QString>
    @Namespace("libtremotesf") public static class Tracker extends Pointer {
        static { Loader.load(); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public Tracker(Pointer p) { super(p); }
    
        /** enum libtremotesf::Tracker::Status */
        public static final int
            Inactive = 0,
            Active = 1,
            Queued = 2,
            Updating = 3,
            Error = 4;

        public native int id();
        public native @Const @ByRef QString announce();
        public native @Const @ByRef QString site();

        public native @Cast("libtremotesf::Tracker::Status") int status();
        public native @ByVal QString errorMessage();

        public native int peers();
        public native int nextUpdate();
    }


// #endif // LIBTREMOTESF_TRACKER_H


}
