/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.equeim.libtremotesf;

public class Rpc {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Rpc(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Rpc obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  public final static class Status {
    public final static int Disconnected = 0;
    public final static int Connecting = Disconnected + 1;
    public final static int Connected = Connecting + 1;
  }

  public final static class Error {
    public final static int NoError = 0;
    public final static int TimedOut = NoError + 1;
    public final static int ConnectionError = TimedOut + 1;
    public final static int AuthenticationError = ConnectionError + 1;
    public final static int ParseError = AuthenticationError + 1;
    public final static int ServerIsTooNew = ParseError + 1;
    public final static int ServerIsTooOld = ServerIsTooNew + 1;
  }

}
