/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.equeim.libtremotesf;

public class TorrentData {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected TorrentData(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TorrentData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libtremotesfJNI.delete_TorrentData(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int getId() {
    return libtremotesfJNI.TorrentData_id_get(swigCPtr, this);
  }

  public String getHashString() {
    return libtremotesfJNI.TorrentData_hashString_get(swigCPtr, this);
}

  public String getName() {
    return libtremotesfJNI.TorrentData_name_get(swigCPtr, this);
}

  public String getErrorString() {
    return libtremotesfJNI.TorrentData_errorString_get(swigCPtr, this);
}

  public int getStatus() {
    return libtremotesfJNI.TorrentData_status_get(swigCPtr, this);
  }

  public int getQueuePosition() {
    return libtremotesfJNI.TorrentData_queuePosition_get(swigCPtr, this);
  }

  public long getTotalSize() {
    return libtremotesfJNI.TorrentData_totalSize_get(swigCPtr, this);
  }

  public long getCompletedSize() {
    return libtremotesfJNI.TorrentData_completedSize_get(swigCPtr, this);
  }

  public long getLeftUntilDone() {
    return libtremotesfJNI.TorrentData_leftUntilDone_get(swigCPtr, this);
  }

  public long getSizeWhenDone() {
    return libtremotesfJNI.TorrentData_sizeWhenDone_get(swigCPtr, this);
  }

  public double getPercentDone() {
    return libtremotesfJNI.TorrentData_percentDone_get(swigCPtr, this);
  }

  public double getRecheckProgress() {
    return libtremotesfJNI.TorrentData_recheckProgress_get(swigCPtr, this);
  }

  public int getEta() {
    return libtremotesfJNI.TorrentData_eta_get(swigCPtr, this);
  }

  public boolean getMetadataComplete() {
    return libtremotesfJNI.TorrentData_metadataComplete_get(swigCPtr, this);
  }

  public long getDownloadSpeed() {
    return libtremotesfJNI.TorrentData_downloadSpeed_get(swigCPtr, this);
  }

  public long getUploadSpeed() {
    return libtremotesfJNI.TorrentData_uploadSpeed_get(swigCPtr, this);
  }

  public boolean getDownloadSpeedLimited() {
    return libtremotesfJNI.TorrentData_downloadSpeedLimited_get(swigCPtr, this);
  }

  public int getDownloadSpeedLimit() {
    return libtremotesfJNI.TorrentData_downloadSpeedLimit_get(swigCPtr, this);
  }

  public boolean getUploadSpeedLimited() {
    return libtremotesfJNI.TorrentData_uploadSpeedLimited_get(swigCPtr, this);
  }

  public int getUploadSpeedLimit() {
    return libtremotesfJNI.TorrentData_uploadSpeedLimit_get(swigCPtr, this);
  }

  public long getTotalDownloaded() {
    return libtremotesfJNI.TorrentData_totalDownloaded_get(swigCPtr, this);
  }

  public long getTotalUploaded() {
    return libtremotesfJNI.TorrentData_totalUploaded_get(swigCPtr, this);
  }

  public double getRatio() {
    return libtremotesfJNI.TorrentData_ratio_get(swigCPtr, this);
  }

  public double getRatioLimit() {
    return libtremotesfJNI.TorrentData_ratioLimit_get(swigCPtr, this);
  }

  public int getRatioLimitMode() {
    return libtremotesfJNI.TorrentData_ratioLimitMode_get(swigCPtr, this);
  }

  public int getSeeders() {
    return libtremotesfJNI.TorrentData_seeders_get(swigCPtr, this);
  }

  public int getLeechers() {
    return libtremotesfJNI.TorrentData_leechers_get(swigCPtr, this);
  }

  public int getPeersLimit() {
    return libtremotesfJNI.TorrentData_peersLimit_get(swigCPtr, this);
  }

  public java.util.Date getAddedDate() {
    return libtremotesfJNI.TorrentData_addedDate_get(swigCPtr, this);
}

  public java.util.Date getActivityDate() {
    return libtremotesfJNI.TorrentData_activityDate_get(swigCPtr, this);
}

  public long getActivityDateTime() {
    return libtremotesfJNI.TorrentData_activityDateTime_get(swigCPtr, this);
  }

  public java.util.Date getDoneDate() {
    return libtremotesfJNI.TorrentData_doneDate_get(swigCPtr, this);
}

  public long getDoneDateTime() {
    return libtremotesfJNI.TorrentData_doneDateTime_get(swigCPtr, this);
  }

  public int getIdleSeedingLimitMode() {
    return libtremotesfJNI.TorrentData_idleSeedingLimitMode_get(swigCPtr, this);
  }

  public int getIdleSeedingLimit() {
    return libtremotesfJNI.TorrentData_idleSeedingLimit_get(swigCPtr, this);
  }

  public String getDownloadDirectory() {
    return libtremotesfJNI.TorrentData_downloadDirectory_get(swigCPtr, this);
}

  public String getComment() {
    return libtremotesfJNI.TorrentData_comment_get(swigCPtr, this);
}

  public String getCreator() {
    return libtremotesfJNI.TorrentData_creator_get(swigCPtr, this);
}

  public java.util.Date getCreationDate() {
    return libtremotesfJNI.TorrentData_creationDate_get(swigCPtr, this);
}

  public long getCreationDateTime() {
    return libtremotesfJNI.TorrentData_creationDateTime_get(swigCPtr, this);
  }

  public int getBandwidthPriority() {
    return libtremotesfJNI.TorrentData_bandwidthPriority_get(swigCPtr, this);
  }

  public boolean getHonorSessionLimits() {
    return libtremotesfJNI.TorrentData_honorSessionLimits_get(swigCPtr, this);
  }

  public boolean getSingleFile() {
    return libtremotesfJNI.TorrentData_singleFile_get(swigCPtr, this);
  }

  public boolean getTrackersAddedOrRemoved() {
    return libtremotesfJNI.TorrentData_trackersAddedOrRemoved_get(swigCPtr, this);
  }

  public TrackersVector getTrackers() {
    long cPtr = libtremotesfJNI.TorrentData_trackers_get(swigCPtr, this);
    return (cPtr == 0) ? null : new TrackersVector(cPtr, false);
  }

  public TorrentData() {
    this(libtremotesfJNI.new_TorrentData(), true);
  }

  public final static class Status {
    public final static int Paused = 0;
    public final static int Downloading = Paused + 1;
    public final static int Seeding = Downloading + 1;
    public final static int StalledDownloading = Seeding + 1;
    public final static int StalledSeeding = StalledDownloading + 1;
    public final static int QueuedForDownloading = StalledSeeding + 1;
    public final static int QueuedForSeeding = QueuedForDownloading + 1;
    public final static int Checking = QueuedForSeeding + 1;
    public final static int QueuedForChecking = Checking + 1;
    public final static int Errored = QueuedForChecking + 1;
  }

  public final static class Priority {
    public final static int LowPriority = -1;
    public final static int NormalPriority = LowPriority + 1;
    public final static int HighPriority = NormalPriority + 1;
  }

  public final static class RatioLimitMode {
    public final static int GlobalRatioLimit = 0;
    public final static int SingleRatioLimit = GlobalRatioLimit + 1;
    public final static int UnlimitedRatio = SingleRatioLimit + 1;
  }

  public final static class IdleSeedingLimitMode {
    public final static int GlobalIdleSeedingLimit = 0;
    public final static int SingleIdleSeedingLimit = GlobalIdleSeedingLimit + 1;
    public final static int UnlimitedIdleSeeding = SingleIdleSeedingLimit + 1;
  }

}
